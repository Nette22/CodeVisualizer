{"nodes" : [{"id" : 0, "x" : 570.6666870117188, "y" : 594.6666870117188, "width" : 511, "height" : 511, "txt" : "Class PlatformerGame.js\n\nVariables (properties)\n-----------------------------------------------------------------------------------------------\n    var KEYCODE_SPACE = 32;\n    var KEYCODE_UP = 38;\n    var KEYCODE_LEFT = 37;\n    var KEYCODE_RIGHT = 39;\n    var KEYCODE_W = 87;\n    var KEYCODE_A = 65;\n    var KEYCODE_D = 68;\n    var numberOfLevels = 4;\n    var hardcodedErrorTextLevel = \n    var statusCanvas = null;\n    var statusCanvasCtx = null;\n    var overlayEnabled = true;\n    var scoreText = null;\n    var timeRemainingText = null;\n    var WarningTime = 30;\n\nFunctions (methods)\n-----------------------------------------------------------------------------------------------\nfunction PlatformerGame(stage, contentManager, gameWidth, gameHeight) \n\n    PlatformerGame.prototype.tick = function () \n\n    PlatformerGame.prototype.StartGame = function () \n\n    PlatformerGame.prototype.UpdateScore = function () \n\n    PlatformerGame.prototype.HandleInput = function () \n\n    PlatformerGame.prototype.DrawOverlay = function () \n\n    PlatformerGame.prototype.SetOverlayCanvas = function () \n\n    PlatformerGame.prototype.ShowStatusCanvas = function (status) \n\n    PlatformerGame.prototype.HideStatusCanvas = function () \n\n    PlatformerGame.prototype.LoadNextLevel = function ()\n\n    PlatformerGame.prototype.OnLevelReady = function (eventResult) \n\n    PlatformerGame.prototype.LoadThisTextLevel = function (textLevel) \n\n        this.level = new Level(a, b, c, d, e);\n\n    PlatformerGame.prototype.ReloadCurrentLevel = function () \n\n    PlatformerGame.prototype.handleKeyDown = function (e) \n\n    PlatformerGame.prototype.handleKeyUp = function (e) \n"},{"id" : 2, "x" : 28, "y" : 64, "width" : 511, "height" : 511, "txt" : "index.html        embedded Javascript\n\nVariables (properties)\n-----------------------------------------------------------------------------------------------\n    var canvas;\n    var stage = null;\n    var contentManager;\n    var platformerGame;\n    var globalCanvasContext;\n    var enableShadows = true;\n    var ieBtnLeft, ieBtnRight, ieBtnJump;\n\nFunctions (methods)\n-----------------------------------------------------------------------------------------------\n    function restart() {\n        stage = new Stage(canvas);\n        OR\n        platformerGame.ReloadCurrentLevel();\n		contentManager = new ContentManager(stage, canvas.width, canvas.height);\n		contentManager.SetDownloadCompleted(startGame);\n		contentManager.StartDownload();\n\n\n    function jumpKey() {\n\n    function leftKey() {\n\n    function rightKey() {\n\n    function changeShadows() {\n\n    function startGame() {\n        platformerGame = new PlatformerGame(stage, contentManager, canvas.width, canvas.height);\n        platformerGame.StartGame();\n\n    function setIE9PinnedModeExperience() {\n\n    function processSelection(btn) {\n"},{"id" : 4, "x" : 1104, "y" : 594.6666870117188, "width" : 511, "height" : 511, "txt" : "Class ContentManager.js\n\nVariables (properties)\n-----------------------------------------------------------------------------------------------\n    var ondownloadcompleted;\n    var NUM_ELEMENTS_TO_DOWNLOAD = 29;\n    var numElementsLoaded = 0;\n    var canPlayMp3;\n    var canPlayOgg;\n    var downloadProgress;\n    var myAudio = document.createElement('audio');\n    this.imgMonsterA = new Image();\n    this.imgMonsterB = new Image(); \n    this.imgMonsterC = new Image(); \n    this.imgMonsterD = new Image();\n    this.imgBlockA0 = new Image();\n    this.imgBlockA1 = new Image();\n    this.imgBlockA2 = new Image();\n    this.imgBlockA3 = new Image();\n    this.imgBlockA4 = new Image();\n    this.imgBlockA5 = new Image();\n    this.imgBlockA6 = new Image();\n    this.imgBlockB0 = new Image();\n    this.imgBlockB1 = new Image();\n    this.imgExit = new Image();\n    this.imgPlatform = new Image();\n    this.imgPlayer = new Image();\n    this.imgGem = new Image();\n    this.winOverlay = new Image();\n    this.loseOverlay = new Image();\n    this.diedOverlay = new Image();\n    this.globalMusic = new Audio();\n    this.playerKilled = new Audio();\n    this.playerJump = new Audio();\n    this.playerFall = new Audio();\n    this.exitReached = new Audio();\n    this.gemCollected = [];\n\nFunctions (methods)\n-----------------------------------------------------------------------------------------------\nfunction ContentManager(stage, width, height) {\n\n    this.SetDownloadCompleted = function (callbackMethod) {\n    this.StartDownload = function () {\n\n    function SetDownloadParameters(assetElement, url) {\n\n    function SetAudioDownloadParameters(assetElement, url) {\n\n    function handleElementLoad(e) {\n\n    function handleElementError(e) {\n\n    this.tick = function() {\n"},{"id" : 5, "x" : 570.6666870117188, "y" : 64, "width" : 511, "height" : 511, "txt" : "Class Stage.js\n\nVariables (properties)\n-----------------------------------------------------------------------------------------------\n    var p = Stage.prototype = new Container();\n    Stage._snapToPixelEnabled = false;\n	p.autoClear = true;\n	p.canvas = null;\n	p.mouseX = null;\n	p.mouseY = null;\n	p.onMouseMove = null;\n	p.onMouseUp = null;\n	p.onMouseDown = null;\n	p.snapToPixelEnabled = false;\n	p.mouseInBounds = false;\n	p._tmpCanvas = null;\n  	p._activeMouseEvent = null;\n	p._activeMouseTarget = null;\n	p._mouseOverIntervalID = null;\n	p._mouseOverX = 0;\n	p._mouseOverY = 0;\n	p._mouseOverTarget = null;\n	p.Container_initialize = p.initialize;\n\nFunctions (methods)\n-----------------------------------------------------------------------------------------------\nStage = function(canvas) {\n\n	p.initialize = function(canvas) {\n\n	p.update = function() {\n\n	p.clear = function() {\n\n	p.toDataURL = function(backgroundColor, mimeType) {\n\n	p.enableMouseOver = function(frequency) {\n\n	p.clone = function() {\n\n	p.toString = function() {\n\n	p._handleMouseMove = function(e) {\n\n	p._updateMousePosition = function(pageX, pageY) {\n\n	p._handleMouseUp = function(e) {\n\n	p._handleMouseDown = function(e) {\n\n	p._testMouseOver = function() {\n"},{"id" : 6, "x" : 1106.666748046875, "y" : 64, "width" : 511, "height" : 511, "txt" : "Class Container.js\n\nVariables (properties)\n-----------------------------------------------------------------------------------------------\n    var p = Container.prototype = new DisplayObject();\n	p.children = null;\n	p.DisplayObject_initialize = p.initialize;\n	p.DisplayObject_draw = p.draw;\n\n\nFunctions (methods)\n-----------------------------------------------------------------------------------------------\nContainer = function() {\n\n	p.initialize = function() {\n\n	p.isVisible = function() {\n\n	p.draw = function(ctx, ignoreCache, _mtx) {\n\n	p.addChild = function(child) {\n\n	p.addChildAt = function(child, index) {\n\n	p.removeChild = function(child) {\n\n	p.removeChildAt = function(index) {\n\n	p.removeAllChildren = function() {\n\n	p.getChildAt = function(index) {\n\n	p.sortChildren = function(sortFunction) {\n\n	p.getChildIndex = function(child) {\n\n	p.getNumChildren = function() {\n\n	p.contains = function(child) {\n\n	p.hitTest = function(x, y) {\n\n	p.getObjectsUnderPoint = function(x, y) {\n\n	p.getObjectUnderPoint = function(x, y) {\n\n	p.clone = function(recursive) {\n\n	p.toString = function() {\n\n	p._getObjectsUnderPoint = function(x, y, arr, mouseEvents) {\n"},{"id" : 7, "x" : 1642.666748046875, "y" : 64, "width" : 511, "height" : 511, "txt" : "abstract Class DisplayObject.js\n\nVariables (properties)\n-----------------------------------------------------------------------------------------------\n    var p = DisplayObject.prototype;\n    DisplayObject.suppressCrossDomainErrors = false;\n    DisplayObject._hitTestCanvas = document.createElement("canvas");\n    DisplayObject._hitTestCanvas.width = DisplayObject._hitTestCanvas.height = 1;\n    DisplayObject._hitTestContext = DisplayObject._hitTestCanvas.getContext("2d");\n    DisplayObject._workingMatrix = new Matrix2D();\n	p.alpha = 1;\n	p.cacheCanvas = null;\n	p.id = -1;\n	p.mouseEnabled = true;\n	p.name = null;\n	p.parent = null;\n	p.regX = 0;\n	p.regY = 0;\n	p.rotation = 0;\n	p.scaleX = 1;\n	p.scaleY = 1;\n	p.skewX = 0;\n	p.skewY = 0;\n	p.shadow = null;\n	p.visible = true;\n	p.x = 0;\n	p.y = 0;\n	p.compositeOperation = null;\n	p.snapToPixel = false;\n	p.onPress = null;\n	p.onClick = null;\n	p.onMouseOver = null;\n	p.onMouseOut = null;\n	p._cacheOffsetX = 0;\n	p._cacheOffsetY = 0;\n	p._cacheDraw = false;\n	p._activeContext = null;\n	p._restoreContext = false;\n	p._revertShadow = false;\n	p._revertX = 0;\n	p._revertY = 0;\n	p._revertAlpha = 1;\n\n\nFunctions (methods)\n-----------------------------------------------------------------------------------------------\nDisplayObject = function() {\n\n	p.initialize = function() {\n\n	p.isVisible = function() {\n\n	p.draw = function(ctx, ignoreCache) {\n\n	p.cache = function(x, y, width, height) {\n\n	p.updateCache = function(compositeOperation) {\n\n	p.uncache = function() {\n\n	p.getStage = function() {\n\n	p.localToGlobal = function(x, y) {\n\n	p.globalToLocal = function(x, y) {\n\n	p.localToLocal = function(x, y, target) {\n\n	p.getConcatenatedMatrix = function(mtx) {\n\n	p.hitTest = function(x, y) {\n\n	p.clone = function() {\n\n	p.toString = function() {\n\n	p.cloneProps = function(o) {\n\n	p.applyShadow = function(ctx, shadow) {\n\n	p._testHit = function(ctx) {\n"},{"id" : 8, "x" : 1642.666748046875, "y" : 593.3333740234375, "width" : 511, "height" : 511, "txt" : "Class Level.js\n\nVariables (properties)\n-----------------------------------------------------------------------------------------------\n    var fpsLabel;\n    var backgroundSeqTile1, backgroundSeqTile2, backgroundSeqTile3;\n    var PointsPerSecond = 5;\n    var globalTargetFPS = 17;\n    var audioGemIndex = 0;\n    var StaticTile = new Tile(null, Enum.TileCollision.Passable, 0, 0);\n\n\nFunctions (methods)\n-----------------------------------------------------------------------------------------------\nfunction Level(stage, contentManager, textLevel, gameWidth, gameHeight) {\n\n    Level.prototype.Dispose = function () {\n\n    Level.prototype.ParseLevelLines = function (levelLine) {\n\n    Level.prototype.LoadTiles = function (fileStream) {\n\n    Level.prototype.LoadTile = function (tileType, x, y) {\n\n    Level.prototype.LoadNamedTile = function (name, collision, x, y) {\n\n    Level.prototype.LoadVarietyTile = function (baseName, variationCount, collision, x, y) {\n\n    Level.prototype.LoadStartTile = function (x, y) {\n\n    Level.prototype.LoadExitTile = function (x, y) {\n\n    Level.prototype.LoadGemTile = function (x, y) {\n\n    Level.prototype.LoadEnemyTile = function (x, y, name) {\n\n    Level.prototype.GetBounds = function (x, y) {\n\n    Level.prototype.Width = function () {\n\n    Level.prototype.Height = function () {\n\n    Level.prototype.GetCollision = function (x, y) {\n\n    Level.prototype.CreateAndAddRandomBackground = function () {\n\n    Level.prototype.StartLevel = function () {\n\n    Level.prototype.Update = function () {\n\n    Level.prototype.UpdateGems = function () {\n\n    Level.prototype.UpdateEnemies = function () {\n\n    Level.prototype.OnPlayerKilled = function (killedBy) {\n\n    Level.prototype.OnExitReached = function () {\n\n    Level.prototype.StartNewLife = function () {\n"}], "connections" : []}